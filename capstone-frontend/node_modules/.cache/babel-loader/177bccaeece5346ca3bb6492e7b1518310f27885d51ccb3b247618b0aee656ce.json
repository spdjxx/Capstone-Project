{"ast":null,"code":"var _jsxFileName = \"/Users/shaud/Desktop/Desktop/c6-mycode/cs/capstone/src/Inbox.js\",\n  _s = $RefreshSig$();\nimport NavBar from \"./NavBar\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inbox = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    recipient: \"John\",\n    messageBody: \"Hey, how are you?\",\n    id: 1\n  }, {\n    recipient: \"Jane\",\n    messageBody: \"Meeting at 5pm?\",\n    id: 2\n  }, {\n    recipient: \"Mike\",\n    messageBody: \"Lunch tomorrow?\",\n    id: 3\n  }]);\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const handleSelectMessage = message => {\n    setSelectedMessage(message);\n  };\n  const [showModal, setShowModal] = useState(false);\n  const [recipient, setRecipient] = useState(\"\");\n  const [messageBody, setMessageBody] = useState(\"\");\n  const handleSendMessage = event => {\n    event.preventDefault();\n    if (recipient && messageBody) {\n      setMessages([...messages, {\n        recipient,\n        messageBody\n      }]);\n      setRecipient(\"\"); // Clear input after sending\n      setMessageBody(\"\"); // Clear input after sending\n      setShowModal(false); // Close modal after sending\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"inbox-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => setShowModal(true),\n      children: \"Compose New Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade show d-block\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog-inbox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content-inbox\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header-inbox\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-body-inbox\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Compose New Message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSendMessage,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"recipient\",\n                  children: \"To:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"recipient\",\n                  name: \"recipient\",\n                  value: recipient,\n                  onChange: event => setRecipient(event.target.value),\n                  placeholder: \"Recipient\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"messageBody\",\n                  children: \"Message:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"messageBody\",\n                  name: \"messageBody\",\n                  value: messageBody,\n                  onChange: event => setMessageBody(event.target.value),\n                  placeholder: \"Write your message here...\",\n                  rows: \"5\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-success\",\n                  children: \"Send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn-close\",\n                  onClick: () => setShowModal(false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageList\",\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No messages yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"To: \", msg.recipient]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.messageBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Inbox, \"0tCCeMk4YZXF0ps7v/cKJxuEnUk=\");\n_c = Inbox;\nexport default Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["NavBar","React","useState","jsxDEV","_jsxDEV","Inbox","_s","messages","setMessages","recipient","messageBody","id","selectedMessage","setSelectedMessage","handleSelectMessage","message","showModal","setShowModal","setRecipient","setMessageBody","handleSendMessage","event","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","type","name","value","onChange","target","placeholder","required","rows","length","map","msg","index","_c","$RefreshReg$"],"sources":["/Users/shaud/Desktop/Desktop/c6-mycode/cs/capstone/src/Inbox.js"],"sourcesContent":["import NavBar from \"./NavBar\";\nimport React, { useState } from \"react\";\n\nconst Inbox = () => {\n    const [messages, setMessages] = useState([\n        { recipient: \"John\", messageBody: \"Hey, how are you?\", id: 1 },\n        { recipient: \"Jane\", messageBody: \"Meeting at 5pm?\", id: 2 },\n        { recipient: \"Mike\", messageBody: \"Lunch tomorrow?\", id: 3 },\n    ]);\n\n    const [selectedMessage, setSelectedMessage] = useState(null);\n\n    const handleSelectMessage = (message) => {\n        setSelectedMessage(message);\n    };\n\n    const [showModal, setShowModal] = useState(false);\n\n    const [recipient, setRecipient] = useState(\"\");\n    const [messageBody, setMessageBody] = useState(\"\");\n\n    const handleSendMessage = (event) => {\n        event.preventDefault();\n        if (recipient && messageBody) {\n            setMessages([...messages, { recipient, messageBody }]);\n            setRecipient(\"\"); // Clear input after sending\n            setMessageBody(\"\"); // Clear input after sending\n            setShowModal(false); // Close modal after sending\n        }\n    };\n\n    return (\n        <div className=\"inbox\">\n            <header id=\"inbox-header\">\n                <h1>Messages</h1>\n            </header>\n\n            {/* Compose New Message Button */}\n            <button\n                className=\"btn btn-primary\"\n                onClick={() => setShowModal(true)}\n            >\n                Compose New Message\n            </button>\n\n            {/* Modal for composing a new message */}\n            {showModal && (\n                <div className=\"modal fade show d-block\">\n                    <div className=\"modal-dialog-inbox\">\n                        <div className=\"modal-content-inbox\">\n                            <div className=\"modal-header-inbox\">\n                                <div className=\"modal-body-inbox\">\n                                    <h2>Compose New Message</h2>\n                                    <form onSubmit={handleSendMessage}>\n                                        <label htmlFor=\"recipient\">To:</label>\n                                        <br />\n                                        <input\n                                            type=\"text\"\n                                            id=\"recipient\"\n                                            name=\"recipient\"\n                                            value={recipient}\n                                            onChange={(event) =>\n                                                setRecipient(event.target.value)\n                                            }\n                                            placeholder=\"Recipient\"\n                                            required\n                                        />\n                                        <br />\n                                        <br />\n                                        <label htmlFor=\"messageBody\">\n                                            Message:\n                                        </label>\n                                        <br />\n                                        <textarea\n                                            id=\"messageBody\"\n                                            name=\"messageBody\"\n                                            value={messageBody}\n                                            onChange={(event) =>\n                                                setMessageBody(\n                                                    event.target.value\n                                                )\n                                            }\n                                            placeholder=\"Write your message here...\"\n                                            rows=\"5\"\n                                            required\n                                        ></textarea>\n                                        <br />\n                                        <br />\n                                        <button\n                                            type=\"submit\"\n                                            className=\"btn btn-success\"\n                                        >\n                                            Send\n                                        </button>\n                                        <button\n                                            type=\"button\"\n                                            className=\"btn-close\"\n                                            onClick={() => setShowModal(false)}\n                                        ></button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {/* Display sent messages in the middle of the page */}\n            <div className=\"messageList\">\n                {messages.length === 0 ? (\n                    <p>No messages yet.</p>\n                ) : (\n                    messages.map((msg, index) => (\n                        <div key={index} className=\"messageBox\">\n                            <h4>To: {msg.recipient}</h4>\n                            <p>{msg.messageBody}</p>\n                        </div>\n                    ))\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Inbox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}