{"ast":null,"code":"import NavBar from\"./NavBar\";import{useNavigate}from\"react-router-dom\";import{useState,useEffect}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Home=()=>{const navigate=useNavigate();const[posts,setPosts]=useState([]);const[newPost,setNewPost]=useState(\"\");const[name,setName]=useState(\"\");useEffect(()=>{const makeAPICall=async()=>{const res=await fetch(`http://localhost:3001/post`);const data=await res.json();setPosts(data.posts);};makeAPICall();},[]);const handleSubmit=async event=>{event.preventDefault();const res=await fetch(`http://localhost:3001/post`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({name,content:newPost})});const data=await res.json();setPosts(data.posts);// const post = {\n//     title: newPost,\n//     name: name,\n//     time: new Date().toLocaleString(), // Get the current time\n//     likes: 0, // Initialize likes to 0\n// };\n// setPosts([post, ...posts]);\nsetNewPost(\"\");// clears the text area after submitting\nsetName(\"\");};const createPost=event=>{setNewPost(event.target.value);// Update the newPost state\n};const handleNameChange=event=>{setName(event.target.value);// Update the name state\n};const handleLike=index=>{const updatedPosts=[...posts];updatedPosts[index].likes+=1;setPosts(updatedPosts);};return/*#__PURE__*/_jsxs(\"div\",{className:\"mainPage\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-3\"}),/*#__PURE__*/_jsx(\"div\",{className:\"col-6\",style:{background:\"white\",padding:10,border:\"1px solid gray\",marginBottom:20,borderRadius:10},children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"nameInput\",className:\"form-label\",children:\"Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"nameInput\",placeholder:\"Your name\",value:name,onChange:handleNameChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"titleInput\",className:\"form-label\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",id:\"titleInput\",placeholder:\"Post a new update for parents.\",style:{width:\"100%\"},onChange:e=>setNewPost(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",children:\"\\uD83D\\uDCF8\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",children:\"\\uD83C\\uDFA5\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary post-btn\",children:\"Post\"})]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"posts-list\",children:posts.map((post,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"post-box\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:post.name}),\" - \",post.createdAt]}),/*#__PURE__*/_jsx(\"p\",{children:post.content}),/*#__PURE__*/_jsx(\"div\",{className:\"post-actions\",children:/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleLike(index),children:[\"Like (\",post.likes,\")\"]})})]},index))})]});};export default Home;","map":{"version":3,"names":["NavBar","useNavigate","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Home","navigate","posts","setPosts","newPost","setNewPost","name","setName","makeAPICall","res","fetch","data","json","handleSubmit","event","preventDefault","method","headers","body","JSON","stringify","content","createPost","target","value","handleNameChange","handleLike","index","updatedPosts","likes","className","children","style","background","padding","border","marginBottom","borderRadius","onSubmit","htmlFor","type","id","placeholder","onChange","width","e","map","post","createdAt","onClick"],"sources":["/Users/shaud/Desktop/c6-mycode/cs/capstone/src/Home.js"],"sourcesContent":["import NavBar from \"./NavBar\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nconst Home = () => {\n    const navigate = useNavigate();\n\n    const [posts, setPosts] = useState([]);\n    const [newPost, setNewPost] = useState(\"\");\n    const [name, setName] = useState(\"\");\n\n    useEffect(() => {\n        const makeAPICall = async () => {\n            const res = await fetch(`http://localhost:3001/post`);\n            const data = await res.json();\n            setPosts(data.posts);\n        };\n        makeAPICall();\n    }, []);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const res = await fetch(`http://localhost:3001/post`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                name,\n                content: newPost,\n            }),\n        });\n        const data = await res.json();\n        setPosts(data.posts);\n\n        // const post = {\n        //     title: newPost,\n        //     name: name,\n        //     time: new Date().toLocaleString(), // Get the current time\n        //     likes: 0, // Initialize likes to 0\n        // };\n\n        // setPosts([post, ...posts]);\n        setNewPost(\"\"); // clears the text area after submitting\n        setName(\"\");\n    };\n\n    const createPost = (event) => {\n        setNewPost(event.target.value); // Update the newPost state\n    };\n\n    const handleNameChange = (event) => {\n        setName(event.target.value); // Update the name state\n    };\n\n    const handleLike = (index) => {\n        const updatedPosts = [...posts];\n        updatedPosts[index].likes += 1;\n        setPosts(updatedPosts);\n    };\n\n    return (\n        <div className=\"mainPage\">\n            <div className=\"row\">\n                <div className=\"col-3\"></div>\n                <div\n                    className=\"col-6\"\n                    style={{\n                        background: \"white\",\n                        padding: 10,\n                        border: \"1px solid gray\",\n                        marginBottom: 20,\n                        borderRadius: 10,\n                    }}\n                >\n                    <form onSubmit={handleSubmit}>\n                        <label htmlFor=\"nameInput\" className=\"form-label\">\n                            Name:\n                        </label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"nameInput\"\n                            placeholder=\"Your name\"\n                            value={name}\n                            onChange={handleNameChange}\n                        />\n                        <label\n                            htmlFor=\"titleInput\"\n                            className=\"form-label\"\n                        ></label>\n                        <textarea\n                            className=\"form-control\"\n                            id=\"titleInput\"\n                            placeholder=\"Post a new update for parents.\"\n                            style={{ width: \"100%\" }}\n                            onChange={(e) => setNewPost(e.target.value)}\n                        ></textarea>\n                        <div className=\"text-center\">\n                            <button className=\"btn btn-secondary\">ðŸ“¸</button>\n                            <button className=\"btn btn-secondary\">ðŸŽ¥</button>\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary post-btn\"\n                            >\n                                Post\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            <div className=\"posts-list\">\n                {posts.map((post, index) => (\n                    <div key={index} className=\"post-box\">\n                        <p>\n                            <strong>{post.name}</strong> - {post.createdAt}\n                        </p>\n                        <p>{post.content}</p>\n                        <div className=\"post-actions\">\n                            <button onClick={() => handleLike(index)}>\n                                Like ({post.likes})\n                            </button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}